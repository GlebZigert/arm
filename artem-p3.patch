diff --git a/DevContextMenu.qml b/DevContextMenu.qml
index f036e7d..2558140 100644
--- a/DevContextMenu.qml
+++ b/DevContextMenu.qml
@@ -8,6 +8,7 @@ import "js/utils.js" as Utils
 
 Menu {
     id: menu
+    property var extraMenu
       Instantiator {
           delegate: MenuItem {
               text: model.text
@@ -24,6 +25,8 @@ Menu {
                         let ids = Journal.pendingAlarms(model.serviceId)
                         if (ids.indexOf(model.deviceId) >= 0)
                             alarmsList.showDeviceAlarm(model.deviceId)
+                  } else if (extraMenu && model.action in extraMenu) {
+                      extraMenu[model.action].handler()
                   }
               }
           }
@@ -35,23 +38,25 @@ Menu {
           onObjectAdded: menu.insertItem(index, object)
           onObjectRemoved: menu.removeItem(object)
       }
-      function show(serviceId, deviceId) {
-          serviceId = serviceId || 0
+
+      function show(devModel, em) {
+          extraMenu = em || {}
           var list = [],
+              serviceId = devModel.serviceId || 0,
+              deviceId = devModel.id,
               service = root.services[serviceId]
           //console.log(serviceId, deviceId)
 
-          if (service && 'lost' === Utils.className(service.model.status.tcp))
+          if (0 === serviceId || service && 'lost' === Utils.className(service.model.status.tcp))
               return // no menu when connection with the underlaying service is lost
 
+          // menu from service
           if (service && ('contextMenu' in service)) {
-              list = service.contextMenu(serviceId ? deviceId : 0) // 0 for subsystem root
+              // don't forget override null (null means context commands are unavailable, possible no conn with server?)
+              list = service.contextMenu(serviceId ? deviceId : 0) || [] // 0 for subsystem root
               //console.log("ContextMenu:", JSON.stringify(list))
           }
 
-          if (null === list) // null means context commands are unavailable (no conn with server?)
-              return
-
           var pa = Journal.pendingAlarms(serviceId)
           //console.log(JSON.stringify(pa))
           if (Utils.useAlarms() && pa.length > 0) {
@@ -75,6 +80,16 @@ Menu {
               }
           }
 
+          for (let act in extraMenu)
+              list.unshift({
+                  action: act,
+                  text: extraMenu[act].text,
+                  serviceId: serviceId,
+                  deviceId: deviceId,
+                  command: 0
+              })
+
+
           if (list && list.length > 0) {
               menuItemsModel.clear()
               menuItemsModel.append(list)
diff --git a/DevicesTree.qml b/DevicesTree.qml
index 6bba7b6..ec6d0dd 100644
--- a/DevicesTree.qml
+++ b/DevicesTree.qml
@@ -75,8 +75,16 @@ Item {
 
     function showMenu(item) {
         //console.log('SHOW:', item.serviceId, item.id)
+        //console.log("EX:", tree.currentItemExpanded)
         // serviceId is undefined for subsystem node
-        contextMenu.show(item.serviceId, item.id)
+        var extraMenu = {}
+
+        if (item.children && item.children.count > 0)
+            extraMenu[tree.currentItemExpanded ? "CollapseAll" : "ExpandAll"] = {
+                text: tree.currentItemExpanded ? "Свернуть всё" : "Раскрыть всё",
+                handler: () => tree.toggleFold({serviceId: item.serviceId, id: item.id})
+            }
+        contextMenu.show(item, extraMenu)
     }
 
     function selected(item) {
diff --git a/qml.qrc b/qml.qrc
index 0c9813f..69bc26e 100644
--- a/qml.qrc
+++ b/qml.qrc
@@ -345,5 +345,6 @@
         <file>qml/video/empty.png</file>
         <file>qml/video/device-tree.png</file>
         <file>images/bell-on.svg</file>
+        <file>qml/forms/CustomMenu.qml</file>
     </qresource>
 </RCC>
diff --git a/qml/forms/CustomMenu.qml b/qml/forms/CustomMenu.qml
new file mode 100644
index 0000000..a7ca361
--- /dev/null
+++ b/qml/forms/CustomMenu.qml
@@ -0,0 +1,33 @@
+import QtQuick 2.11
+import QtQml 2.11
+import QtQuick.Controls 2.4
+
+Menu {
+    id: menu
+    property var menuItems
+    Instantiator {
+        delegate: MenuItem {
+            text: model.text
+            onTriggered: if (menuItems && model.action in menuItems)
+                  menuItems[model.action].handler()
+            }
+
+        model: ListModel {
+            id: menuItemsModel
+            ListElement{action: ""; text: ""} // !important
+        }
+        onObjectAdded: menu.insertItem(index, object)
+        onObjectRemoved: menu.removeItem(object)
+    }
+
+    function show(menu) {
+        menuItems = menu || {}
+        menuItemsModel.clear()
+
+        for (let act in menuItems)
+            menuItemsModel.append({action: act, text: menuItems[act].text})
+
+        if (menuItemsModel.count > 0)
+            popup()
+    }
+}
diff --git a/qml/forms/MyTree.qml b/qml/forms/MyTree.qml
index f34d797..d631c6f 100755
--- a/qml/forms/MyTree.qml
+++ b/qml/forms/MyTree.qml
@@ -27,6 +27,7 @@ Item {
     property var selectedTNID: -1
     property var path: [0]
     property var expandedItems: []
+    property bool currentItemExpanded: isExpanded(selectedTNID)
     property alias model: columnRepeater.model
     //property colors: {'na', 'ok', 'lost', 'error'}
     signal contextMenu(var item, int x, int y)
@@ -34,11 +35,32 @@ Item {
     signal selected(var item)
     signal selectNode(var item, var tnid, bool rightButton) // select on mouse click
 
+    signal toggleFold(var keys)
     signal findItem(var keys)
     signal clearSelection()
 
     onClearSelection: selectedTNID = -1
 
+    onToggleFold: {
+        realExpand(Utils.findItem(model, keys))
+        isExpanded = isExpanded // trigger updates
+    }
+
+    function realExpand(model) {
+        if (!model || !model.children || 0 === model.children.count) return
+
+        var tnid = getTNID(model),
+            i = expandedItems.indexOf(tnid)
+
+        if (!currentItemExpanded && i < 0)
+            expandedItems.push(tnid)
+        if (currentItemExpanded && i >= 0)
+            expandedItems.splice(i, 1)
+
+        for (i = 0; i < model.children.count; i++)
+            realExpand(model.children.get(i), expand)
+    }
+
     onFindItem: {
         var i,
             item,
@@ -61,7 +83,6 @@ Item {
         isExpanded = isExpanded // trigger updates
     }
 
-
     onSelectNode: {
         var newSelection = selectedTNID !== tnid
         treeRoot.focus = true // get focus (remove from another widget)
diff --git a/qml/mymap/Panel.qml b/qml/mymap/Panel.qml
index fdf0df1..425888c 100755
--- a/qml/mymap/Panel.qml
+++ b/qml/mymap/Panel.qml
@@ -131,6 +131,7 @@ Rectangle {
             Layout.fillHeight: true
             Forms.MyTree{
                 id: tree
+                labelPadding: 1
                 model: root.devices
                 anchors.fill: parent
                 clip: true
@@ -204,6 +205,7 @@ Rectangle {
 
     Forms.ImageFileDialog {id: fileDialog}
     Forms.MessageBox {id: messageBox}
+    Forms.CustomMenu {id: cMenu}
 
     Component.onCompleted: {
         root.deviceSelected.connect(deviceSelected)
@@ -393,7 +395,14 @@ Rectangle {
     }
 
     function treeContextMenu(item, x, y) {
-        //console.log(x, y)
+        var extraMenu = {}
+        if (item.children && item.children.count > 0) {
+            extraMenu[tree.currentItemExpanded ? "CollapseAll" : "ExpandAll"] = {
+                text: tree.currentItemExpanded ? "Свернуть всё" : "Раскрыть всё",
+                handler: () => tree.toggleFold({serviceId: item.serviceId, id: item.id})
+            }
+            cMenu.show(extraMenu)
+        }
     }
 
     function deleteShape() {
